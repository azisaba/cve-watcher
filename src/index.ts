import { convertDateTime, cveToDiscordEmbed, requestNVD } from './util'

const webhookUrl = process.env.WEBHOOK_URL
const newWebhookUrl = process.env.NEW_WEBHOOK_URL
const modifiedWebhookUrl = process.env.MODIFIED_WEBHOOK_URL
if (!webhookUrl && !newWebhookUrl && !modifiedWebhookUrl) {
  throw new Error('One of WEBHOOK_URL, NEW_WEBHOOK_URL or MODIFIED_WEBHOOK_URL environment variable is required, but none was provided')
}

console.log()
console.log('Note: This product uses the NVD API but is not endorsed or certified by the NVD.')
console.log()

let lastChecked = Date.now()

setInterval(async () => {
  try {
    const originalLastChecked = lastChecked
    lastChecked = Date.now()
    const url = `https://services.nvd.nist.gov/rest/json/cves/1.0/?resultsPerPage=50&modStartDate=${convertDateTime(originalLastChecked)}&modEndDate=${convertDateTime(lastChecked)}`
    const response: CVEsAPIResponse = await requestNVD(url).then((res) => res.json())
    const items = response.result.CVE_Items
    console.log(`Fetched ${items.length} item(s)`)
    const newEmbeds: any[] = []
    const modifiedEmbeds: any[] = []
    const embeds: any[] = []
    const flush = async (force: boolean) => {
      if (webhookUrl && embeds.length > 0 && (force || embeds.length >= 10)) {
        const init = {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'User-Agent': 'azisaba/cve-watcher',
          },
          body: JSON.stringify({ embeds }),
        }
        await fetch(webhookUrl, init)
        embeds.length = 0
      }
      if (modifiedWebhookUrl && modifiedEmbeds.length > 0 && (force || modifiedEmbeds.length >= 10)) {
        const init = {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'User-Agent': 'azisaba/cve-watcher',
          },
          body: JSON.stringify({ embeds: modifiedEmbeds }),
        }
        await fetch(modifiedWebhookUrl, init)
        modifiedEmbeds.length = 0
      }
      if (newWebhookUrl && newEmbeds.length > 0 && (force || newEmbeds.length >= 10)) {
        const init = {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'User-Agent': 'azisaba/cve-watcher',
          },
          body: JSON.stringify({ embeds: newEmbeds }),
        }
        await fetch(newWebhookUrl, init)
        newEmbeds.length = 0
      }
    }
    for (const item of items) {
      const isNew = new Date(item.publishedDate).getTime() >= originalLastChecked
      if (isNew) {
        console.log('- New CVE: ' + item.cve.CVE_data_meta.ID)
      } else {
        console.log('- Modified CVE: ' + item.cve.CVE_data_meta.ID)
      }
      const embed = cveToDiscordEmbed(item, isNew)
      embeds.push(embed)
      if (isNew) {
        newEmbeds.push(embed)
      } else {
        modifiedEmbeds.push(embed)
      }
      await flush(false)
    }
    await flush(true)
  } catch (e) {
    console.error('Caught error: ' + e)
  }
}, 1000 * 60) // check every minute
