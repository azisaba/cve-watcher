import { convertDateTime, cveToDiscordEmbed, requestNVD } from './util'

const webhookUrl = process.env.WEBHOOK_URL
const newWebhookUrl = process.env.NEW_WEBHOOK_URL
const modifiedWebhookUrl = process.env.MODIFIED_WEBHOOK_URL
if (!webhookUrl && !newWebhookUrl && !modifiedWebhookUrl) {
  throw new Error('One of WEBHOOK_URL, NEW_WEBHOOK_URL or MODIFIED_WEBHOOK_URL environment variable is required, but none was provided')
}

console.log()
console.log('Note: This product uses the NVD API but is not endorsed or certified by the NVD.')
console.log()

let lastChecked = Date.now()

setInterval(async () => {
  const originalLastChecked = lastChecked
  lastChecked = Date.now()
  const url = `https://services.nvd.nist.gov/rest/json/cves/1.0/?modStartDate=${convertDateTime(originalLastChecked)}&modEndDate=${convertDateTime(lastChecked)}`
  const response: CVEsAPIResponse = await requestNVD(url).then((res) => res.json())
  const items = response.result.CVE_Items
  console.log(`Fetched ${items.length} item(s)`)
  for (const item of items) {
    const isNew = new Date(item.publishedDate).getTime() >= originalLastChecked
    if (isNew) {
      console.log('- New CVE: ' + item.cve.CVE_data_meta.ID)
    } else {
      console.log('- Modified CVE: ' + item.cve.CVE_data_meta.ID)
    }
    const init = {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'User-Agent': 'azisaba/cve-watcher',
      },
      body: JSON.stringify({
        embeds: [cveToDiscordEmbed(item, isNew)],
      }),
    }
    if (webhookUrl) await fetch(webhookUrl, init)
    if (isNew && newWebhookUrl) await fetch(newWebhookUrl, init)
    if (!isNew && modifiedWebhookUrl) await fetch(modifiedWebhookUrl, init)
  }
}, 1000 * 60) // check every minute
